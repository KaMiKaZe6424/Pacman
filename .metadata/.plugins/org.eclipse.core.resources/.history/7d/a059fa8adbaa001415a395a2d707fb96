package pacman.obj;

import java.awt.Color;

import javax.swing.JPanel;

import pacman.main.Game;

public abstract class Collidable extends JPanel {
	
	private int speed;
	
	private String reqDir = "r";
	
	private String direction = "r";
	
	private int px;
	private int py;
	
	private int lastx;
	private int lasty;
	
	private static final long serialVersionUID = -652719543772601926L;
	
	public Collidable(int x, int y) {
		setSize(20, 20);
		setVisible(true);
		px = x;
		py = y;
	}
	
	public abstract void update();
	
	public void setSpeed(int v) {
		speed = v;
	}
	
	public void setPosition() {
		lastx = px;
		lasty = py;
		switch (direction) {
		case "u": py -= speed;break;
		case "d": py += speed;break;
		case "l": px -= speed;break;
		case "r": px += speed;break;
		}
		checkPos();
		setLocation(px, py);
		if (((lastx % Square.size) - speed) <= Square.size / 2 && ((px % Square.size) - speed >= Square.size / 2) || ((lasty % Square.size) - speed) <= Square.size / 2 && ((py % Square.size) - speed >= Square.size / 2)) {
			setDirection();
		}
	}
	
	public void scheduleDirectionChange(String dir) {
		reqDir = dir;
	}
	
	public final int getPosX() {
		return px;
	}
	
	public final int getPosY() {
		return py;
	}
	
	public void setDirection() {
		direction = reqDir;
	}
	
	public String getDirection() {
		return direction;
	}

	public int getLastX() {
		return lastx;
	}

	public int getLastY() {
		return lasty;
	}

	public void setPosX(int i) {
		px = i;
	}
	
	public void setPosY(int i) {
		py = i;
	}
	
	public void checkPos() {
		Square s = Game.getField().getSquareAt(px, py);
		if ((lastx % Square.size < Square.size / 2 && px % Square.size >= Square.size / 2) || (lasty % Square.size < Square.size / 2 && py % Square.size >= Square.size / 2)) {
			setDirection();
			if (s.isWall(direction)) {
				System.out.println("Stopping collidable");
				setSpeed(0);
			} else {
				setSpeed(1);
			}
		}
		s.paintBG(Color.RED);
	}
	
}
